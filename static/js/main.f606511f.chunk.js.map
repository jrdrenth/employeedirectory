{"version":3,"sources":["components/Header/index.js","utils/API.js","components/Body/index.js","App.js","index.js"],"names":["Header","axios","get","Body","useState","dummyFlag","setDummyFlag","users","setUsers","filteredUsers","setFilteredUsers","isSortAsc","setIsSortAsc","sortCompare","a","b","userX","userY","name","first","toLowerCase","localeCompare","useEffect","API","then","results","data","sort","sortedUsers","className","type","placeholder","onChange","event","filterText","target","value","filteredList","filter","user","last","email","login","username","cell","includes","trim","SearchChangeHandler","onClick","icon","faCaretUp","faCaretDown","map","picture","data-th","src","medium","alt","href","uuid","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAWeA,MARf,WACE,OACE,iCACE,uD,+CCFS,EACH,WACR,OAAOC,IAAMC,IAAI,kD,MCwINC,MAvIf,WACE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAyCA,SAASC,EAAYC,EAAGC,GACtB,IAGIC,EAAQF,EACRG,EAAQF,EASZ,OAPKJ,IAEHK,EAAQD,EACRE,EAAQH,GAGDE,EAAME,KAAKC,MAAMC,cAAcC,cAAcJ,EAAMC,KAAKC,MAAMC,eAYzE,OAhEAE,qBAAU,WAGRC,IAAeC,MAAK,SAAAC,GAClBjB,EAASiB,EAAQC,KAAKD,QAAQE,KAAKd,IACnCH,EAAiBe,EAAQC,KAAKD,QAAQE,KAAKd,SAE5C,IAEHS,qBAAU,WAKRhB,GAAcD,GAEd,IAAIuB,EAAcnB,EAAckB,KAAKd,GACrCH,EAAiBkB,KAEhB,CAACjB,IA8CF,gCACE,qBAAKkB,UAAU,kBAAf,SACI,+BACE,uBACEA,UAAU,eACVC,KAAK,SACLC,YAAY,SACZC,SAAU,SAAAC,GAAK,OAnD3B,SAA6BA,GAC3B,IAAIC,EAAaD,EAAME,OAAOC,MAS1BC,EAAe9B,EAAM+B,QAAO,SAACC,GAE/B,OADiBA,EAAKrB,KAAKC,MAAQ,IAAMoB,EAAKrB,KAAKsB,KAAO,IAAMD,EAAKE,MAAQ,IAAMF,EAAKG,MAAMC,SAAWJ,EAAKK,MAC5FxB,cAAcyB,SAASX,EAAWY,OAAO1B,kBAG7DV,EAAiB2B,EAAaV,KAAKd,IAoCNkC,CAAoBd,UAI/C,sBAAMJ,UAAU,OAAhB,SACE,wBACEA,UAAU,kDADZ,UAGE,gCACE,+BACE,uCACA,qBACEmB,QAAS,WA1BnBpC,GADED,IA0BM,iBAIE,cAAC,IAAD,CAAiBkB,UAAU,QAAQoB,KAAMtC,EAAYuC,IAAYC,SAEnE,uCACA,uCACA,4CAGJ,gCACG1C,EAAc2C,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,QAASnC,EAA+B,EAA/BA,KAAMuB,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,KACjD,OACE,+BACE,oBAAIU,UAAQ,QAAQzB,UAAU,eAA9B,SACE,qBACE0B,IAAKF,EAAQG,OACbC,IAAK,kBAGT,qBAAIH,UAAS,OAAQzB,UAAU,eAA/B,UACGX,EAAKC,MADR,IACgBD,EAAKsB,QAErB,oBAAIc,UAAQ,QAAQzB,UAAU,eAA9B,SACGe,IAEH,oBAAIU,UAAQ,QAAQzB,UAAU,eAA9B,SACE,mBAAG6B,KAAM,UAAYjB,EAAON,OAAO,UAAnC,SACGM,MAGL,oBAAIa,UAAQ,QAAQzB,UAAU,eAA9B,SACGa,EAAMC,aAnBFD,EAAMiB,oBCjGhBC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f606511f.chunk.js","sourcesContent":["import React from 'react';\nimport \"./style.css\";\n\nfunction Header () {\n  return (\n    <header>\n      <h1>Employee Directory</h1>\n    </header>\n  )\n}\n\nexport default Header;\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the RandomUser API\n\nexport default {\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=100&nat=us\");\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport flatten from 'flat'\nimport API from '../../utils/API';\nimport './style.css';\n\nfunction Body() {\n  const [dummyFlag, setDummyFlag] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [isSortAsc, setIsSortAsc] = useState(true);\n\n  useEffect(() => {\n    //console.log(`INITIAL useEffect() - isSortAsc: ${isSortAsc}`)\n\n    API.getUsers().then(results => {\n      setUsers(results.data.results.sort(sortCompare));\n      setFilteredUsers(results.data.results.sort(sortCompare));\n    });\n  }, []);  // Empty brackets define to run ONCE\n\n  useEffect(() => {\n    //console.log(`UPDATED useEffect() - isSortAsc: ${isSortAsc}`)\n    \n    // FOR SOME REASON THIS NEEDS TO BE HERE, UPDATING ANOTHER STATE, OTHERWISE SORTING DOESN'T WORK THE FIRST COUPLE CLICKS\n    // IT WILL EVEN START SORTING IN REVERSE ORDER SOMETIMES WITHOUT THIS, NOT SURE WHY\n    setDummyFlag(!dummyFlag);\n\n    let sortedUsers = filteredUsers.sort(sortCompare);\n    setFilteredUsers(sortedUsers);\n\n  }, [isSortAsc]);\n\n  function SearchChangeHandler(event) {\n    let filterText = event.target.value;\n\n    // CAN USE THIS IF YOU WANT TO FILTER BASED ON ALL PROPERTIES IN THE ENTIRE OBJECT TREE, IT WILL FLATTEN AND THEN GET ALL PROPERTIES\n    // let filteredList = users.filter((user) => {\n    //   let flattened = flatten(user);\n    //   let values = Object.values(flattened).join('').toLowerCase();\n    //   return values.indexOf(filterText.toLowerCase()) !== -1;\n    // });\n\n    let filteredList = users.filter((user) => {\n      let userValues = user.name.first + ' ' + user.name.last + ' ' + user.email + ' ' + user.login.username + user.cell;\n      return userValues.toLowerCase().includes(filterText.trim().toLowerCase());\n    });\n\n    setFilteredUsers(filteredList.sort(sortCompare));\n  }\n\n  function sortCompare(a, b) {\n    var result = 0;\n    \n    // default to ascending\n    let userX = a;\n    let userY = b;\n\n    if (!isSortAsc) {\n      // set to descending\n      userX = b;\n      userY = a;\n    }\n    \n    result = userX.name.first.toLowerCase().localeCompare(userY.name.first.toLowerCase());\n    return result;\n  }\n\n  function SortHandler(event) {\n    if (isSortAsc) {\n      setIsSortAsc(false);\n    } else {\n      setIsSortAsc(true);\n    }\n  }\n\n  return (\n    <div>\n      <nav className='navbar bg-light'>\n          <form>\n            <input\n              className='form-control'\n              type='search'\n              placeholder='Search'\n              onChange={event => SearchChangeHandler(event)}\n            />\n          </form>\n      </nav>\n      <main className='mt-5'>\n        <table\n          className='table table-striped table-hover table-condensed'\n        >\n          <thead>\n            <tr>\n              <th>Photo</th>\n              <th\n                onClick={() => { SortHandler(); }}\n              >\n                Name\n                <FontAwesomeIcon className='caret' icon={isSortAsc ? faCaretUp : faCaretDown} />\n              </th>\n              <th>Phone</th>\n              <th>Email</th>\n              <th>Login</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredUsers.map(({ picture, name, email, login, cell }) => {\n              return (\n                <tr key={login.uuid}>\n                  <td data-th='Photo' className='align-middle'>\n                    <img\n                      src={picture.medium}\n                      alt={'profile pic'}\n                    />\n                  </td>\n                  <td data-th={'Name'} className='align-middle'>\n                    {name.first} {name.last}\n                  </td>\n                  <td data-th='Phone' className='align-middle'>\n                    {cell}\n                  </td>\n                  <td data-th='Email' className='align-middle'>\n                    <a href={'mailto:' + email} target='__blank'>\n                      {email}\n                    </a>\n                  </td>\n                  <td data-th='Login' className='align-middle'>\n                    {login.username}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n      {/* {filteredUsers.map(({ name }) => <div>{ `${name.first} ${name.last}` }</div>)} */}\n    </div>\n  );\n}\n\nexport default Body;\n","import React from 'react';\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}